let main = document.querySelector('main');
let textArea = document.getElementById('text-area');
let controlPanel = document.getElementById('control-panel');

let cmdButtons = controlPanel.children;
let cmdElemnts = {};

const params = [{
  cmd: 'fontName',
  icon: 'Sans Serif',
  val: 'Sans Serif'
}, {
  cmd: 'fontSize',
  icon: 'format_size'
}, {
  cmd: 'bold',
  icon: 'format_bold'
}, {
  cmd: 'italic',
  icon: 'format_italic'
}, {
  cmd: 'underline',
  icon: 'format_underlined'
}, {
  cmd: 'hiliteColor'
}, {
  cmd: 'justifyLeft',
  icon: 'format_align_left'
}, {
  cmd: 'justifyCenter',
  icon: 'format_align_center'
}, {
  cmd: 'justifyRight',
  icon: 'format_align_right'
}, {
  cmd: 'insertOrderedList',
  icon: 'format_list_numbered'
}, {
  cmd: 'insertUnorderedList',
  icon: 'format_list_bulleted'
}, {
  cmd: 'outdent',
  icon: 'format_indent_decrease'
}, {
  cmd: 'indent',
  icon: 'format_indent_increase'
}, {
  cmd: 'removeFormat',
  icon: 'format_clear'
}];



for (let i = 0; i < cmdButtons.length; i++) {
  let id = cmdButtons[i].id;
  cmdElemnts[id] = document.getElementById(id);
}

function addListenerMulti(el, s, fn) {
  s.split(' ').forEach(e => el.addEventListener(e, fn, false));
}

addListenerMulti(textArea, 'click keyup focus', highlight);

function highlight() {
  for (let elem in cmdElemnts) {
    if (isSelectionState(elem)) {
      cmdElemnts[elem].style.background = 'green';
    } else {
      cmdElemnts[elem].style.background = '';
    }
  }
}

function isSelectionState(state) {
  return document.queryCommandState(state);
}

controlPanel.addEventListener('click', (e) => {
  if (e.target === e.currentTarget) return;
  
  transformText(e.target.id);
});

function transformText(style) {

  document.execCommand(style, false, 'h1');
  textArea.focus();
}

document.body.onload = function() {
  textArea.focus();
}











<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>WYSIWYG</title>
  <link href="style.css" rel="stylesheet">
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons"
        rel="stylesheet">
  <script src="main.js" async></script>
</head>
<body>
  <main>
    <div id="text-area" contenteditable="true">
      Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quae officia, distinctio. Libero, non! Vel, autem nostrum minus voluptas voluptatem debitis vero voluptatibus a! Quasi soluta ex fuga modi, fugit reiciendis!
    </div>
    <div id="control-panel">
      <button id="fontName">Sans Serif</button>
      <button class="material-icons" id="fontSize">format_size</button>
      <button class="material-icons" id="bold">format_bold</button>
      <button class="material-icons" id="italic">format_italic</button>
      <button class="material-icons" id="underline">format_underlined</button>
      <input type="color" id="hiliteColor">
      <button class="material-icons" id="justifyLeft">format_align_left</button>
      <button class="material-icons" id="justifyCenter">format_align_center</button>
      <button class="material-icons" id="justifyRight">format_align_right</button>
      <button class="material-icons" id="insertOrderedList">format_list_numbered</button>
      <button class="material-icons" id="insertUnorderedList">format_list_bulleted</button>
      <button class="material-icons" id="outdent">format_indent_decrease</button>
      <button class="material-icons" id="indent">format_indent_increase</button>
      <button class="material-icons" id="removeFormat">format_clear</button>
    </div>
  </main>
</body>
</html>